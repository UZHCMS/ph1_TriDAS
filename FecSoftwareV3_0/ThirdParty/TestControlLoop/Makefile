#############################################################################
# Makefile for building: TestControlLoop
# Generated by qmake (1.07a) (Qt 3.3.8b) on: Tue Feb  2 14:01:50 2016
# Project:  TestControlLoop.pro
# Template: app
# Command: $(QMAKE) -o Makefile TestControlLoop.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -g  -DI2C100 -DBT1003 -DLINUX -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_NO_DEBUG -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -Wall -W -g  -DI2C100 -DBT1003 -DLINUX -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_NO_DEBUG -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib64/qt-3.3/mkspecs/default -I. -Iinclude -I${ENV_CMS_TK_FEC_ROOT}/FecPciDeviceDriver/include/ -I${ENV_CMS_TK_FEC_ROOT}/FecUsbDeviceDriver/include/ -I${ENV_CMS_TK_FEC_ROOT}/generic/include -I${ENV_CMS_TK_FEC_ROOT}/ThirdParty/APIConsoleDebugger/include/ -I${ENV_CMS_TK_HAL_ROOT}/generic/include -I${ENV_CMS_TK_HAL_ROOT}/busAdapter/include -I${ENV_CMS_TK_HAL_ROOT}/utilities/include -I${ENV_CMS_TK_HAL_ROOT}/generic/include/linux -I${ENV_CMS_TK_SBS_ROOT}/include -I${ENV_CMS_TK_CAEN_ROOT}/include -I${XDAQ_ROOT}/${XDAQ_PLATFORM}/include -I${XDAQ_ROOT}/${XDAQ_PLATFORM}/include/${XDAQ_OS} -I${XDAQ_ROOT}/include -I${XDAQ_ROOT}/include/${XDAQ_OS} -I${XDAQ_ROOT}/daq/xcept/include -I$(QTDIR)/include -I.ui/ -I. -I.moc/
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L${ENV_CMS_TK_FEC_ROOT}/lib/ -lAPIFecVme -L${ENV_CMS_TK_SBS_ROOT}/lib -lSBSLinuxX86BusAdapter -lbtp -L${XDAQ_ROOT}/lib/ -L${XDAQ_ROOT}/${OS_PLATFORM}/lib/ -lGenericHAL -lxerces-c -L${ENV_CMS_TK_FEC_ROOT}/FecPciDeviceDriver -lfec_glue -L${ENV_CMS_TK_FEC_ROOT}/FecUsbDeviceDriver/lib/linux/x86/ -lfec_usb_glue -lpthread_nonshared -L${ENV_CMS_TK_CAEN_ROOT}/lib -lCAENLinuxBusAdapter -lCAENVME -L${XDAQ_ROOT}/${XDAQ_PLATFORM}/lib -lxcept -lqt-mt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = .obj/

####### Files

HEADERS = include/TestConfigurationImpl.h \
		include/PowerUpStepsImpl.h \
		include/SavePreferencesImpl.h \
		include/LoadPreferencesImpl.h \
		include/ModuleInfoImpl.h \
		include/PSCurrentStoreImpl.h \
		include/TestResultsImpl.h \
		include/GUISupervisor.h \
		include/FecRingSelectionImpl.h \
		include/DCUThresholdsImpl.h \
		include/CCUInfoPage.h \
		include/CCUInfoImpl.h \
		include/ModuleInfoPage.h \
		include/LoadResultsImpl.h \
		include/DirChoiceImpl.h
SOURCES = src/Main.cpp \
		src/TestConfigurationImpl.cpp \
		src/PSCurrentStoreImpl.cpp \
		src/TestResultsImpl.cpp \
		src/PowerUpStepsImpl.cpp \
		src/GUISupervisor.cpp \
		src/FecRingSelectionImpl.cpp \
		src/ModuleInfoImpl.cpp \
		src/LoadPreferencesImpl.cpp \
		src/SavePreferences.cpp \
		src/DCUThresholdsImpl.cpp \
		src/CCUInfoImpl.cpp \
		src/LoadResultsImpl.cpp \
		src/DirChoiceImpl.cpp
OBJECTS = .obj/Main.o \
		.obj/TestConfigurationImpl.o \
		.obj/PSCurrentStoreImpl.o \
		.obj/TestResultsImpl.o \
		.obj/PowerUpStepsImpl.o \
		.obj/GUISupervisor.o \
		.obj/FecRingSelectionImpl.o \
		.obj/ModuleInfoImpl.o \
		.obj/LoadPreferencesImpl.o \
		.obj/SavePreferences.o \
		.obj/DCUThresholdsImpl.o \
		.obj/CCUInfoImpl.o \
		.obj/LoadResultsImpl.o \
		.obj/DirChoiceImpl.o \
		.obj/ccuinfo.o \
		.obj/dcuthresholds.o \
		.obj/loadpreferences.o \
		.obj/moduleinfo.o \
		.obj/powerupsteps.o \
		.obj/pscurrentstore.o \
		.obj/savepreferences.o \
		.obj/testconfiguration.o \
		.obj/testresults.o \
		.obj/fecringselection.o \
		.obj/loadresults.o \
		.obj/dirchoice.o
FORMS = ccuinfo.ui \
		dcuthresholds.ui \
		loadpreferences.ui \
		moduleinfo.ui \
		powerupsteps.ui \
		pscurrentstore.ui \
		savepreferences.ui \
		testconfiguration.ui \
		testresults.ui \
		fecringselection.ui \
		loadresults.ui \
		dirchoice.ui
UICDECLS = .ui/ccuinfo.h \
		.ui/dcuthresholds.h \
		.ui/loadpreferences.h \
		.ui/moduleinfo.h \
		.ui/powerupsteps.h \
		.ui/pscurrentstore.h \
		.ui/savepreferences.h \
		.ui/testconfiguration.h \
		.ui/testresults.h \
		.ui/fecringselection.h \
		.ui/loadresults.h \
		.ui/dirchoice.h
UICIMPLS = .ui/ccuinfo.cpp \
		.ui/dcuthresholds.cpp \
		.ui/loadpreferences.cpp \
		.ui/moduleinfo.cpp \
		.ui/powerupsteps.cpp \
		.ui/pscurrentstore.cpp \
		.ui/savepreferences.cpp \
		.ui/testconfiguration.cpp \
		.ui/testresults.cpp \
		.ui/fecringselection.cpp \
		.ui/loadresults.cpp \
		.ui/dirchoice.cpp
SRCMOC   = .moc/moc_ccuinfo.cpp \
		.moc/moc_dcuthresholds.cpp \
		.moc/moc_loadpreferences.cpp \
		.moc/moc_moduleinfo.cpp \
		.moc/moc_powerupsteps.cpp \
		.moc/moc_pscurrentstore.cpp \
		.moc/moc_savepreferences.cpp \
		.moc/moc_testconfiguration.cpp \
		.moc/moc_testresults.cpp \
		.moc/moc_fecringselection.cpp \
		.moc/moc_loadresults.cpp \
		.moc/moc_dirchoice.cpp
OBJMOC = .obj/moc_ccuinfo.o \
		.obj/moc_dcuthresholds.o \
		.obj/moc_loadpreferences.o \
		.obj/moc_moduleinfo.o \
		.obj/moc_powerupsteps.o \
		.obj/moc_pscurrentstore.o \
		.obj/moc_savepreferences.o \
		.obj/moc_testconfiguration.o \
		.obj/moc_testresults.o \
		.obj/moc_fecringselection.o \
		.obj/moc_loadresults.o \
		.obj/moc_dirchoice.o
DIST	   = TestControlLoop.pro
QMAKE_TARGET = TestControlLoop
DESTDIR  = 
TARGET   = TestControlLoop

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: TestControlLoop.pro  /usr/lib64/qt-3.3/mkspecs/default/qmake.conf /usr/lib64/qt-3.3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile TestControlLoop.pro
qmake: 
	@$(QMAKE) -o Makefile TestControlLoop.pro

dist: 
	@mkdir -p .obj/TestControlLoop && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .obj/TestControlLoop/ && $(COPY_FILE) --parents ccuinfo.ui.h loadpreferences.ui.h moduleinfo.ui.h powerupsteps.ui.h pscurrentstore.ui.h savepreferences.ui.h testconfiguration.ui.h testresults.ui.h .obj/TestControlLoop/ && ( cd `dirname .obj/TestControlLoop` && $(TAR) TestControlLoop.tar TestControlLoop && $(GZIP) TestControlLoop.tar ) && $(MOVE) `dirname .obj/TestControlLoop`/TestControlLoop.tar.gz . && $(DEL_FILE) -r .obj/TestControlLoop

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

.obj/Main.o: src/Main.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/Main.o src/Main.cpp

.obj/TestConfigurationImpl.o: src/TestConfigurationImpl.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/TestConfigurationImpl.o src/TestConfigurationImpl.cpp

.obj/PSCurrentStoreImpl.o: src/PSCurrentStoreImpl.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/PSCurrentStoreImpl.o src/PSCurrentStoreImpl.cpp

.obj/TestResultsImpl.o: src/TestResultsImpl.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/TestResultsImpl.o src/TestResultsImpl.cpp

.obj/PowerUpStepsImpl.o: src/PowerUpStepsImpl.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/PowerUpStepsImpl.o src/PowerUpStepsImpl.cpp

.obj/GUISupervisor.o: src/GUISupervisor.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/GUISupervisor.o src/GUISupervisor.cpp

.obj/FecRingSelectionImpl.o: src/FecRingSelectionImpl.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/FecRingSelectionImpl.o src/FecRingSelectionImpl.cpp

.obj/ModuleInfoImpl.o: src/ModuleInfoImpl.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/ModuleInfoImpl.o src/ModuleInfoImpl.cpp

.obj/LoadPreferencesImpl.o: src/LoadPreferencesImpl.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/LoadPreferencesImpl.o src/LoadPreferencesImpl.cpp

.obj/SavePreferences.o: src/SavePreferences.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/SavePreferences.o src/SavePreferences.cpp

.obj/DCUThresholdsImpl.o: src/DCUThresholdsImpl.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/DCUThresholdsImpl.o src/DCUThresholdsImpl.cpp

.obj/CCUInfoImpl.o: src/CCUInfoImpl.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/CCUInfoImpl.o src/CCUInfoImpl.cpp

.obj/LoadResultsImpl.o: src/LoadResultsImpl.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/LoadResultsImpl.o src/LoadResultsImpl.cpp

.obj/DirChoiceImpl.o: src/DirChoiceImpl.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/DirChoiceImpl.o src/DirChoiceImpl.cpp

.ui/ccuinfo.h: ccuinfo.ui 
	$(UIC) ccuinfo.ui -o .ui/ccuinfo.h

.ui/ccuinfo.cpp: .ui/ccuinfo.h ccuinfo.ui ccuinfo.ui.h 
	$(UIC) ccuinfo.ui -i ccuinfo.h -o .ui/ccuinfo.cpp

.ui/dcuthresholds.h: dcuthresholds.ui 
	$(UIC) dcuthresholds.ui -o .ui/dcuthresholds.h

.ui/dcuthresholds.cpp: .ui/dcuthresholds.h dcuthresholds.ui 
	$(UIC) dcuthresholds.ui -i dcuthresholds.h -o .ui/dcuthresholds.cpp

.ui/loadpreferences.h: loadpreferences.ui 
	$(UIC) loadpreferences.ui -o .ui/loadpreferences.h

.ui/loadpreferences.cpp: .ui/loadpreferences.h loadpreferences.ui loadpreferences.ui.h 
	$(UIC) loadpreferences.ui -i loadpreferences.h -o .ui/loadpreferences.cpp

.ui/moduleinfo.h: moduleinfo.ui 
	$(UIC) moduleinfo.ui -o .ui/moduleinfo.h

.ui/moduleinfo.cpp: .ui/moduleinfo.h moduleinfo.ui moduleinfo.ui.h 
	$(UIC) moduleinfo.ui -i moduleinfo.h -o .ui/moduleinfo.cpp

.ui/powerupsteps.h: powerupsteps.ui 
	$(UIC) powerupsteps.ui -o .ui/powerupsteps.h

.ui/powerupsteps.cpp: .ui/powerupsteps.h powerupsteps.ui powerupsteps.ui.h 
	$(UIC) powerupsteps.ui -i powerupsteps.h -o .ui/powerupsteps.cpp

.ui/pscurrentstore.h: pscurrentstore.ui 
	$(UIC) pscurrentstore.ui -o .ui/pscurrentstore.h

.ui/pscurrentstore.cpp: .ui/pscurrentstore.h pscurrentstore.ui pscurrentstore.ui.h 
	$(UIC) pscurrentstore.ui -i pscurrentstore.h -o .ui/pscurrentstore.cpp

.ui/savepreferences.h: savepreferences.ui 
	$(UIC) savepreferences.ui -o .ui/savepreferences.h

.ui/savepreferences.cpp: .ui/savepreferences.h savepreferences.ui savepreferences.ui.h 
	$(UIC) savepreferences.ui -i savepreferences.h -o .ui/savepreferences.cpp

.ui/testconfiguration.h: testconfiguration.ui 
	$(UIC) testconfiguration.ui -o .ui/testconfiguration.h

.ui/testconfiguration.cpp: .ui/testconfiguration.h testconfiguration.ui testconfiguration.ui.h 
	$(UIC) testconfiguration.ui -i testconfiguration.h -o .ui/testconfiguration.cpp

.ui/testresults.h: testresults.ui 
	$(UIC) testresults.ui -o .ui/testresults.h

.ui/testresults.cpp: .ui/testresults.h testresults.ui testresults.ui.h 
	$(UIC) testresults.ui -i testresults.h -o .ui/testresults.cpp

.ui/fecringselection.h: fecringselection.ui 
	$(UIC) fecringselection.ui -o .ui/fecringselection.h

.ui/fecringselection.cpp: .ui/fecringselection.h fecringselection.ui 
	$(UIC) fecringselection.ui -i fecringselection.h -o .ui/fecringselection.cpp

.ui/loadresults.h: loadresults.ui 
	$(UIC) loadresults.ui -o .ui/loadresults.h

.ui/loadresults.cpp: .ui/loadresults.h loadresults.ui 
	$(UIC) loadresults.ui -i loadresults.h -o .ui/loadresults.cpp

.ui/dirchoice.h: dirchoice.ui 
	$(UIC) dirchoice.ui -o .ui/dirchoice.h

.ui/dirchoice.cpp: .ui/dirchoice.h dirchoice.ui 
	$(UIC) dirchoice.ui -i dirchoice.h -o .ui/dirchoice.cpp

.obj/ccuinfo.o: .ui/ccuinfo.cpp ccuinfo.ui.h \
		.ui/ccuinfo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/ccuinfo.o .ui/ccuinfo.cpp

.obj/dcuthresholds.o: .ui/dcuthresholds.cpp .ui/dcuthresholds.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/dcuthresholds.o .ui/dcuthresholds.cpp

.obj/loadpreferences.o: .ui/loadpreferences.cpp loadpreferences.ui.h \
		.ui/loadpreferences.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/loadpreferences.o .ui/loadpreferences.cpp

.obj/moduleinfo.o: .ui/moduleinfo.cpp moduleinfo.ui.h \
		.ui/moduleinfo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moduleinfo.o .ui/moduleinfo.cpp

.obj/powerupsteps.o: .ui/powerupsteps.cpp powerupsteps.ui.h \
		.ui/powerupsteps.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/powerupsteps.o .ui/powerupsteps.cpp

.obj/pscurrentstore.o: .ui/pscurrentstore.cpp pscurrentstore.ui.h \
		.ui/pscurrentstore.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/pscurrentstore.o .ui/pscurrentstore.cpp

.obj/savepreferences.o: .ui/savepreferences.cpp savepreferences.ui.h \
		.ui/savepreferences.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/savepreferences.o .ui/savepreferences.cpp

.obj/testconfiguration.o: .ui/testconfiguration.cpp testconfiguration.ui.h \
		.ui/testconfiguration.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/testconfiguration.o .ui/testconfiguration.cpp

.obj/testresults.o: .ui/testresults.cpp testresults.ui.h \
		.ui/testresults.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/testresults.o .ui/testresults.cpp

.obj/fecringselection.o: .ui/fecringselection.cpp .ui/fecringselection.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/fecringselection.o .ui/fecringselection.cpp

.obj/loadresults.o: .ui/loadresults.cpp .ui/loadresults.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/loadresults.o .ui/loadresults.cpp

.obj/dirchoice.o: .ui/dirchoice.cpp .ui/dirchoice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/dirchoice.o .ui/dirchoice.cpp

.obj/moc_ccuinfo.o: .moc/moc_ccuinfo.cpp  .ui/ccuinfo.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_ccuinfo.o .moc/moc_ccuinfo.cpp

.obj/moc_dcuthresholds.o: .moc/moc_dcuthresholds.cpp  .ui/dcuthresholds.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_dcuthresholds.o .moc/moc_dcuthresholds.cpp

.obj/moc_loadpreferences.o: .moc/moc_loadpreferences.cpp  .ui/loadpreferences.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_loadpreferences.o .moc/moc_loadpreferences.cpp

.obj/moc_moduleinfo.o: .moc/moc_moduleinfo.cpp  .ui/moduleinfo.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_moduleinfo.o .moc/moc_moduleinfo.cpp

.obj/moc_powerupsteps.o: .moc/moc_powerupsteps.cpp  .ui/powerupsteps.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_powerupsteps.o .moc/moc_powerupsteps.cpp

.obj/moc_pscurrentstore.o: .moc/moc_pscurrentstore.cpp  .ui/pscurrentstore.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_pscurrentstore.o .moc/moc_pscurrentstore.cpp

.obj/moc_savepreferences.o: .moc/moc_savepreferences.cpp  .ui/savepreferences.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_savepreferences.o .moc/moc_savepreferences.cpp

.obj/moc_testconfiguration.o: .moc/moc_testconfiguration.cpp  .ui/testconfiguration.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_testconfiguration.o .moc/moc_testconfiguration.cpp

.obj/moc_testresults.o: .moc/moc_testresults.cpp  .ui/testresults.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_testresults.o .moc/moc_testresults.cpp

.obj/moc_fecringselection.o: .moc/moc_fecringselection.cpp  .ui/fecringselection.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_fecringselection.o .moc/moc_fecringselection.cpp

.obj/moc_loadresults.o: .moc/moc_loadresults.cpp  .ui/loadresults.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_loadresults.o .moc/moc_loadresults.cpp

.obj/moc_dirchoice.o: .moc/moc_dirchoice.cpp  .ui/dirchoice.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_dirchoice.o .moc/moc_dirchoice.cpp

.moc/moc_ccuinfo.cpp: $(MOC) .ui/ccuinfo.h
	$(MOC) .ui/ccuinfo.h -o .moc/moc_ccuinfo.cpp

.moc/moc_dcuthresholds.cpp: $(MOC) .ui/dcuthresholds.h
	$(MOC) .ui/dcuthresholds.h -o .moc/moc_dcuthresholds.cpp

.moc/moc_loadpreferences.cpp: $(MOC) .ui/loadpreferences.h
	$(MOC) .ui/loadpreferences.h -o .moc/moc_loadpreferences.cpp

.moc/moc_moduleinfo.cpp: $(MOC) .ui/moduleinfo.h
	$(MOC) .ui/moduleinfo.h -o .moc/moc_moduleinfo.cpp

.moc/moc_powerupsteps.cpp: $(MOC) .ui/powerupsteps.h
	$(MOC) .ui/powerupsteps.h -o .moc/moc_powerupsteps.cpp

.moc/moc_pscurrentstore.cpp: $(MOC) .ui/pscurrentstore.h
	$(MOC) .ui/pscurrentstore.h -o .moc/moc_pscurrentstore.cpp

.moc/moc_savepreferences.cpp: $(MOC) .ui/savepreferences.h
	$(MOC) .ui/savepreferences.h -o .moc/moc_savepreferences.cpp

.moc/moc_testconfiguration.cpp: $(MOC) .ui/testconfiguration.h
	$(MOC) .ui/testconfiguration.h -o .moc/moc_testconfiguration.cpp

.moc/moc_testresults.cpp: $(MOC) .ui/testresults.h
	$(MOC) .ui/testresults.h -o .moc/moc_testresults.cpp

.moc/moc_fecringselection.cpp: $(MOC) .ui/fecringselection.h
	$(MOC) .ui/fecringselection.h -o .moc/moc_fecringselection.cpp

.moc/moc_loadresults.cpp: $(MOC) .ui/loadresults.h
	$(MOC) .ui/loadresults.h -o .moc/moc_loadresults.cpp

.moc/moc_dirchoice.cpp: $(MOC) .ui/dirchoice.h
	$(MOC) .ui/dirchoice.h -o .moc/moc_dirchoice.cpp

####### Install

install:  

uninstall:  

